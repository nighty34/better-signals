local signals = require "nightfury/signals/main"

function data()

return { 
	params = {
		{
			key = "better_signals_x_offset",
			name = _("better_signals_x_offset"),
--			uiType = "ICON_BUTTON",
			values = {_("better_signals_snap_left"), _("better_signals_snap_middle"), _("better_signals_snap_right")},
			defaultIndex = 1,
			tooltip = _("nighty_type_n_id_sign_tooltip"),
		},
	},
	type = "ASSET_TRACK",
	--buildMode = "MULTI",
	description = {
		name = _("nighty_type_n_hauptsignal_name"),			
		description = _("nighty_type_n_hauptsignal_desc"),
	},
	availability = {
		yearFrom = 1986
	},
	skipOnInit = true,
	categories = { "nighty_typ_n" },
	skipCollision = true,
	autoRemovable = false,
	order = 34340,
	
	updateFn = function(params)
		local result = {}
		result.models = {}


		-- Determine signalComponents
		local isGreen = (params.signal_state and params.signal_state == 1)

		local x_offset = 0

		if (params.better_signals_x_offset) then
			if params.better_signals_x_offset == 0 then
				x_offset = -2.5
			elseif params.better_signals_x_offset == 2 then
				x_offset = 2.5
			end
		end


		
		-- Model definition
		result.models[#result.models+1] = { id = "nighty/signals/typ-n_base.mdl", transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x_offset, 0, 0, 1 }}
		
		
		-- signal lamps
		if not isGreen then -- red
			result.models[#result.models+1] = { id = "nighty/signals/typ-n_base_red.mdl", transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x_offset, 0, 0, 1 }}
		else -- green
			result.models[#result.models+1] = { id = "nighty/signals/typ-n_base_green.mdl", transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x_offset, 0, 0, 1 }}
		end
		
		result.cost = -1
		result.maintenanceCost = result.cost / 6

		result.terrainAlignmentLists = {
			{
				type = "LESS",
				faces = { { { .1, -.1, 0 }, { -.1, -.1, 0 }, { -.1, .1, 0 } , { .1, .1, 0 } } },
				slopeLow = 0,
				slopeHigh = 0,
				optional = true,
			},
		}
		
		
		result.groundFaces = {
			{  
				face = { { -1, -1, 0 }, { 1, -1, 0 }, { 1, 1, 0 } },
				modes = {
					{
						type = "FILL",               
						key = "industry_floor.lua"
					}
				},
				loop = true,
				alignmentOffsetMode = "OBJECT",
				alignmentDirMode = "OBJECT",
				alignmentOffset = { -2.0, -1.0 },

			},
		}
		
		return result
	end
}
end